Problem:
Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.
Return any array that satisfies this condition.



Constraints:
1 <= nums.length <= 5000
0 <= nums[i] <= 5000



Solution:
class Solution {
    public int[] sortArrayByParity(int[] nums) {
        if (nums.length == 1) {
            return nums;
        }
        int oddPointer = 0;
        int evenPointer = nums.length -1;
        int temp = 0;
        
        while (evenPointer > oddPointer) {
            
            if (nums[evenPointer]%2 < nums[oddPointer]%2) {
                
                temp = nums[oddPointer];
                nums[oddPointer] = nums[evenPointer];
                nums[evenPointer] = temp;
            }
            if (nums[evenPointer]%2 != 0) {
                evenPointer--;
            }
            if (nums[oddPointer]%2 == 0) {
                oddPointer++;
            }
            
        }
        return nums;
    }
}
