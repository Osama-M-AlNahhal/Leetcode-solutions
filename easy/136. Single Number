Problem:
Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
You must implement a solution with a linear runtime complexity and use only constant extra space.


Constraints:
1 <= nums.length <= 3 * 104
-3 * 104 <= nums[i] <= 3 * 104
Each element in the array appears twice except for one element which appears only once.


Solution:
class Solution {
    public int singleNumber(int[] nums) {
        if (nums.length < 2) {
            return nums[0];
        }
        int output = nums[0];
        for (int i = 1; i < nums.length; i++) {
            output ^= nums[i];
        }
        return output;
    }
}
